[{"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\index.js":"1","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\reportWebVitals.js":"2","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\App.js":"3","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcode.js":"4","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Login.js":"5","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcodecl.js":"6","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\Finalcart.js":"7","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\Cart.js":"8","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Predict.js":"9","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Header.js":"10","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Footer.js":"11","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Table1.js":"12","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\WelcomePage-motion.jsx":"13","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\TableBody.js":"14","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Left.js":"15","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\test.js":"16"},{"size":500,"mtime":1620740360000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1620740360000,"results":"19","hashOfConfig":"18"},{"size":2680,"mtime":1621680005820,"results":"20","hashOfConfig":"18"},{"size":705,"mtime":1620740360000,"results":"21","hashOfConfig":"18"},{"size":4120,"mtime":1622517359634,"results":"22","hashOfConfig":"18"},{"size":926,"mtime":1620740360000,"results":"23","hashOfConfig":"18"},{"size":312,"mtime":1621655832644,"results":"24","hashOfConfig":"18"},{"size":800,"mtime":1622526107586,"results":"25","hashOfConfig":"18"},{"size":6653,"mtime":1621775500786,"results":"26","hashOfConfig":"18"},{"size":1076,"mtime":1621321935199,"results":"27","hashOfConfig":"18"},{"size":1167,"mtime":1620740360000,"results":"28","hashOfConfig":"18"},{"size":2359,"mtime":1620740360000,"results":"29","hashOfConfig":"18"},{"size":2572,"mtime":1621849446729,"results":"30","hashOfConfig":"18"},{"size":565,"mtime":1620740360000,"results":"31","hashOfConfig":"18"},{"size":521,"mtime":1620740360000,"results":"32","hashOfConfig":"18"},{"size":307,"mtime":1621675602710,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1e3vep1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\index.js",[],["76","77"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\App.js",["78","79"],"import React,{Component} from 'react';\r\nimport './App.css';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Login from './components/Login';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { BrowserRouter, Route, Switch, Link  } from 'react-router-dom';\r\nimport Predict from './components/Predict';\r\nimport Qrcode from './components/Qrcode';\r\nimport Qrcodecl from './components/Qrcodecl';\r\nimport Test from './components/test/test'\r\nimport Finalcart from './components/test/Finalcart';\r\nimport Cart from './components/test/Cart';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  root : {\r\n    width : '100%',\r\n    // marginTop: theme.spacing.unit * 3,\r\n    overflowX:\"auto\"\r\n  },\r\n    table:{\r\n      minWidth:1080\r\n    },\r\n    progress:{\r\n      // margin : theme.spacing.unit*2\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props)     \r\n  {\r\n    super(props);\r\n    this.state={\r\n      customers:'',\r\n      completed:0\r\n    }\r\n  }\r\n\r\n  stateRefresh= () => {           //state 초기화 \r\n    this.setState(\r\n      {\r\n        customers:'',\r\n        completed:0\r\n      });\r\n      this.callApi().then(res=> this.setState({customers:res})) \r\n      .catch(err=> console.log(err+\"에러\"));\r\n\r\n  }\r\n\r\n\r\n  \r\n  componentDidMount() {\r\n    this.timer = setInterval(this.progress,20);\r\n    this.callApi().then(res=> this.setState({customers:res})) \r\n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\r\n  }\r\n  \r\n  callApi = async() =>{\r\n    const response = await fetch('/api/predict');  //server.js 에 있는 /api/customers JSON값을 가져온다\r\n    const body = await response.json();\r\n    return body;\r\n  }\r\n\r\n  // callApi1 = async() =>{\r\n  //   const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\r\n  //   const body = await response.json();\r\n  //   return body;\r\n  // }\r\n\r\n\r\n \r\n\r\n  progress = () => {\r\n    const {completed} =this.state;\r\n    this.setState({ completed: completed>=100? 0 : completed+1});\r\n  }\r\n\r\n  \r\n  render()\r\n  \r\n  {\r\n    const {classes} =this.props;\r\n    return(\r\n      <>\r\n     <div>\r\n     </div>\r\n      {/* <Login></Login> */}\r\n     \r\n    <BrowserRouter>\r\n    <Switch>\r\n    <Route exact path=\"/\" component={Login}/>\r\n     <Route path=\"/predict\" component={Predict}/>\r\n     <Route path=\"/qrcodecl\" component={Qrcodecl}/>\r\n     <Route path=\"/qrcode\" component={Qrcode}/>\r\n     <Route path=\"/Test\" component={Test}/>\r\n     <Route path=\"/cart\" component={Cart}/>\r\n     <Route path=\"/finalcart\" component={Finalcart}/>\r\n    </Switch>\r\n  </BrowserRouter>\r\n  <div>\r\n     </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(App);\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcode.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Login.js",["80","81"],"import React, { Component } from 'react'\nimport Predict from './Predict';\nimport '../App.css';\nimport Header from './layout/Header';\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\n\nexport default class Login extends Component {\n    constructor(props) {   // 초기 설정\n        super(props);\n        this.state = {\n            userNum: \"\",\n            name: \"\",\n            // isLogin: true,\n            isLogin: false,\n            delay: 100,\n            data: 'No result',\n            screen:\"notfull\",\n            isQR : null,\n            LoginTime:0,\n            isWrong:0,\n        }\n        this.GetVoiceValue = this.GetVoiceValue.bind(this);   \n    }\n    GetVoiceValue(data) { this.setState({userNum: data}) }\n\n    handleLogin = e => {\n        e.preventDefault() //페이징 이동 없게\n        const login_info = {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        };\n        fetch(\"/api/login\", login_info).then(res => {\n            // return JSON.parse(res.json());\n            return res.json();\n            \n        }).then(json => {\n                if (json[0] != undefined) {\n                    window.localStorage.setItem(\"userInfo\", JSON.stringify(json))\n                    this.setState({\n                            userNum: json[0].usernum,\n                            name: json[0].name,\n                            isLogin: true });}\n                else {\n                    this.setState(\n                        {\n                            isWrong:false,\n                        }\n                    )\n                    if(this.state.isWrong===false){\n                    // alert(\"아이디 혹은 비밀번호를 확인하세요\")\n                    this.setState(\n                        {\n                            isWrong:0\n                        }\n                    )\n                }\n                }});\n    }\n\n    handleuserNum = e => {this.setState({ userNum: e.target.value})}\n\n    render() {\n        if(this.state.isQR===true&&this.state.LoginTime===0){\n            try {\n                setTimeout(() => {\n                    try {\n                        document.getElementById('btnLogin').click();     \n                    } catch (error) {\n\n                    }}, 1500);\n            } catch (error) {\n                console.log(\"로그인 오류\")   \n            }}\n        return (\n            <>\n            <body scroll=\"no\"></body>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"LoginPage\" style={\n                    {\n                        textAlign:\"center\"\n                    }\n                }>\n                    <button id=\"FullScreenButton\"></button>\n                        {\n                            this.state.isLogin === false ? (\n                                <div className=\"Login-form\">\n                                    <form className=\"LoginForm\" onSubmit={this.handleLogin}>\n            <BarcodeScannerComponent width={500} height={500}\n              onUpdate={(err, result) => {\n                if (result) {\n                document.getElementById(\"FullScreenButton\").click();\n                    this.setState({userNum: result.text, isQR:true})}\n                else{\n                this.setState(\n                    {userNum: \"QR 코드를 인식해주세요\", isQR:false});}\n              }}\n            />\n                          \n             <div><input id=\"LoginInput\" type=\"text\" value={this.state.userNum} onChange={this.handleuserNum.bind(this)} placeholder=\"QR CODE\"></input>\n             <button type=\"hidden\" className=\"btn btn-primary\" id=\"btnLogin\" type=\"submit\">1</button>\n            </div>\n            </form></div>) \n            :           ///로그인이 되었다면 Predict 화면 \n            (<div><Predict name={this.state.name} userNum={this.state.userNum} isLogin={this.state.isLogin}></Predict></div>)}</div></div>\n            </>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcodecl.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\Finalcart.js",["82","83"],"import React from 'react';\nimport {useLocation} from 'react-router-dom';\nimport $ from 'jquery'\n\nfunction FinalCart() {\n\n    \n\n    // useLocation()을 사용하여 Link에서 넘겨준 state 값을 받아온다\n    \n    \n    return (\n        <div>\n            \n        </div>\n    );\n}\n\nexport default FinalCart;\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\Cart.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Predict.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Header.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Footer.js",["84","85","86","87","88","89","90"],"import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n        <div className=\"pt-4 my-md-5 pt-md-5 border-top\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md\">\n            <img className=\"mb-2\" src=\"https://namigation.s3.ap-northeast-2.amazonaws.com/web/mark.jpg\" width=\"20px\" alt=\"\" width=\"24\" height=\"24\"/>\n            <small className=\"d-block mb-3 text-muted\">&copy; 2020-2021</small>\n          <div className=\"col-6 col-md\">\n            <h5>Features</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"text-muted\" href=\"#\">Cool stuff</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Random feature</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Team feature</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Stuff for developers</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Another one</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Last time</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n        </div>\n        </div>\n        \n    )\n}\n\nexport default Footer\n",["91","92"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Table1.js",["93","94"],"import React, { Component } from 'react'\nimport ResultTable from './TableBody'\nimport { get } from 'axios';\nimport '../App.css';\nimport Header from './layout/Header';\nimport Left from './layout/Left';\nimport Footer from './layout/Footer';\n\nexport default class Table1 extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            userNum: this.props.userNum,\n            name: this.props.name,\n        }\n    }\n    \n    stateRefresh= () => {           //state 초기화 \n        this.setState(\n          {\n            result:'',\n            completed:0\n            \n          });\n          this.callApi().then(res=> this.setState({result:res})) \n          .catch(err=> console.log(err));\n         \n      }\n\n      componentDidMount() {\n        const login_info={\n            method:\"POST\",\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n        fetch(\"/api/login\",login_info).then(res => {\n            return res.json();\n        })\n        this.timer = setInterval(this.progress,20);\n        this.callApi().then(res=> this.setState({result:res})) \n        .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n      }\n      \n      callApi = async() =>{\n        const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n        const body = await response.json();\n        console.log(body)\n        return body;\n        \n      }\n      \n    render() {\n        return (\n          <>\n          <Header></Header>\n          {/* <Left></Left> */}\n            <div className=\"Content\">\n            <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">First</th>\n      <th scope=\"col\">Last</th>\n      <th scope=\"col\">Handle</th>\n    </tr>\n  </thead>\n  \n</table>\n             \n           \n{this.state.userNum} {this.state.name}\n        <tablebody>\n        {this.state.result ? this.state.result.map(result=> {return (<ResultTable key = {result.id} id = {result.id} userNum = {result.userNum} depth={result.depth} distance={result.distance} date={result.date} >  </ResultTable>)\n        }): (<div>zxczx</div>)\n        \n        } </tablebody>\n\n            </div>\n            <Footer></Footer>\n            </>\n        )\n    }\n}\n",["95","96"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\WelcomePage-motion.jsx",["97","98","99"],"import React, { useState, useEffect } from 'react'\nimport * as tmImage from '@teachablemachine/image'\n\nexport default function WelcomePage({GetTeachValue}) {\n  const [openVal, setOpenVal] = useState(false);\n  const [state, setstate] = useState({\n    result1 : \"High\",\n    result2 : \"Middle\",\n    result3 : \"Low\",\n    result4 : \"Good\",\n    iswebcam : false,\n  })\n\n  // const URL = \"https://teachablemachine.withgoogle.com/models/pg97lEWuB/\"  //원래\n  const URL = \"https://teachablemachine.withgoogle.com/models/ukHIXusf5/\" //4개 분류\n\n  \n  let model;\n  let webcam;\n  let labelContainer;\n  let maxPredictions;\n\n  useEffect(() => {\n    init()\n    \n  }, [])\n\n  async function init() {\n    const modelURL = URL + \"model.json\";\n    const metadataURL = URL + \"metadata.json\";\n    \n\n    model = await tmImage.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n\n    const flip = true; \n    webcam = new tmImage.Webcam(500, 500, flip); \n    await webcam.setup();\n    await webcam.play();\n    window.requestAnimationFrame(loop);\n    webcam.canvas.id=\"WebCam\"\n    document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n    labelContainer = document.getElementById(\"label-container\");\n    for (let i = 0; i < maxPredictions; i++) { \n      labelContainer.appendChild(document.createElement(\"div\"));\n    }\n  }\n\n  async function loop() {\n    webcam.update();\n    await predict();\n    window.requestAnimationFrame(loop);\n  }\n\n  async function predict() {\n    \n    const prediction = await model.predict(webcam.canvas);\n    setstate({\n      high : prediction[0].probability.toFixed(2),\n      middle : prediction[1].probability.toFixed(2),\n      low : prediction[2].probability.toFixed(2),\n      good : prediction[3].probability.toFixed(2),\n    })\n    function SetTeachValue(){\n      GetTeachValue(prediction[0].probability.toFixed(2),prediction[1].probability.toFixed(2),prediction[2].probability.toFixed(2),prediction[3].probability.toFixed(2))\n    }\n    SetTeachValue()\n    if (prediction[0].probability.toFixed(2) >= 0.7) {\n      setOpenVal(true);\n    } else {\n      setOpenVal(false);\n    }\n    \n  }\n\n\n  return (\n    <div>\n      \n      <div id=\"webcam-container\"></div>\n      <div id=\"label-container\">{/* <h3>탈모일 확률 : {state.result1} <br></br> 정상일 확률 : {state.result2}</h3> */}</div>\n      <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n    </div>\n  )\n}","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\TableBody.js",["100"],"import React, { Component } from 'react'\n\nexport default class TableBody extends Component {\n    render() {\n        return (\n            <div>\n            <table class=\"table\">\n            <th scope=\"row\">{this.props.id}</th>\n            <td>{this.props.userNum}</td>\n            <td>{this.props.depth}</td>\n            <td>{this.props.distance}</td>\n            <td>{this.props.date}</td>\n            <td><img src=\"https://placeimg.com/64/64/summer\" /></td>\n            {/* <td><img src=\"\"></img></td> */}\n            </table>\n            </div>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Left.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\test.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":6,"column":40,"nodeType":"107","messageId":"108","endLine":6,"endColumn":44},{"ruleId":"105","severity":1,"message":"109","line":90,"column":12,"nodeType":"107","messageId":"108","endLine":90,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":41,"column":29,"nodeType":"112","messageId":"113","endLine":41,"endColumn":31},{"ruleId":"114","severity":1,"message":"115","line":105,"column":78,"nodeType":"116","endLine":105,"endColumn":91},{"ruleId":"105","severity":1,"message":"117","line":2,"column":9,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},{"ruleId":"105","severity":1,"message":"118","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":9},{"ruleId":"114","severity":1,"message":"115","line":9,"column":125,"nodeType":"116","endLine":9,"endColumn":135},{"ruleId":"119","severity":1,"message":"120","line":14,"column":19,"nodeType":"121","endLine":14,"endColumn":54},{"ruleId":"119","severity":1,"message":"120","line":15,"column":19,"nodeType":"121","endLine":15,"endColumn":54},{"ruleId":"119","severity":1,"message":"120","line":16,"column":19,"nodeType":"121","endLine":16,"endColumn":54},{"ruleId":"119","severity":1,"message":"120","line":17,"column":19,"nodeType":"121","endLine":17,"endColumn":54},{"ruleId":"119","severity":1,"message":"120","line":18,"column":19,"nodeType":"121","endLine":18,"endColumn":54},{"ruleId":"119","severity":1,"message":"120","line":19,"column":19,"nodeType":"121","endLine":19,"endColumn":54},{"ruleId":"101","replacedBy":"122"},{"ruleId":"103","replacedBy":"123"},{"ruleId":"105","severity":1,"message":"124","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"105","severity":1,"message":"125","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":12},{"ruleId":"101","replacedBy":"126"},{"ruleId":"103","replacedBy":"127"},{"ruleId":"105","severity":1,"message":"128","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":17},{"ruleId":"105","severity":1,"message":"129","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":26,"column":6,"nodeType":"132","endLine":26,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":13,"column":17,"nodeType":"121","endLine":13,"endColumn":64},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useLocation' is defined but never used.","'$' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["136"],["137"],"'get' is defined but never used.","'Left' is defined but never used.",["136"],["137"],"'openVal' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["138"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [init]",{"range":"141","text":"142"},[645,647],"[init]"]