[{"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\index.js":"1","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\reportWebVitals.js":"2","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\App.js":"3","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Login.js":"4","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcodecl.js":"5","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Predict.js":"6","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Table1.js":"7","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\TableBody.js":"8","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\hair-predict.jsx":"9","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Header.js":"10","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Hair-predict.jsx":"11"},{"size":500,"mtime":1620740360000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1620740360000,"results":"14","hashOfConfig":"13"},{"size":733,"mtime":1623377592293,"results":"15","hashOfConfig":"13"},{"size":3979,"mtime":1623397841562,"results":"16","hashOfConfig":"13"},{"size":923,"mtime":1623391083040,"results":"17","hashOfConfig":"13"},{"size":5654,"mtime":1623390752184,"results":"18","hashOfConfig":"13"},{"size":2296,"mtime":1621679846634,"results":"19","hashOfConfig":"13"},{"size":565,"mtime":1620740360000,"results":"20","hashOfConfig":"13"},{"size":2460,"mtime":1623392080422,"results":"21","hashOfConfig":"13"},{"size":1075,"mtime":1623382486368,"results":"22","hashOfConfig":"13"},{"size":2460,"mtime":1623392080422,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1e3vep1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\index.js",[],["53","54"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\App.js",["55","56"],"import React,{Component} from 'react';\r\nimport './App.css';\r\nimport Login from './components/Login';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { BrowserRouter, Route, Switch, Link  } from 'react-router-dom';\r\nimport Predict from './components/Predict';\r\nimport Qrcodecl from './components/Qrcodecl';\r\n\r\nclass App extends Component{\r\n  render()\r\n   {\r\n    const {classes} =this.props;\r\n    return(\r\n      <>\r\n     <div>\r\n     </div>\r\n    <BrowserRouter>\r\n    <Switch>\r\n    <Route exact path=\"/\" component={Login}/>\r\n     <Route path=\"/predict\" component={Predict}/>\r\n     <Route path=\"/qrcodecl\" component={Qrcodecl}/>\r\n    </Switch>\r\n  </BrowserRouter>\r\n  <div>\r\n     </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Login.js",["57","58"],"import React, { Component } from 'react'\nimport Predict from './Predict';\nimport '../App.css';\nimport Header from './layout/Header';\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\n\nexport default class Login extends Component {\n    constructor(props) {   // 초기 설정\n        super(props);\n        this.state = {\n            userNum: \"\",\n            name: \"\",\n            // isLogin: true,\n            isLogin: false,\n            isQR : null,\n            LoginTime:0,\n            isWrong:0,\n        }\n        // this.GetVoiceValue = this.GetVoiceValue.bind(this);   \n    }\n\n    handleLogin = e => {\n        e.preventDefault() //페이징 이동 없게\n        const login_info = {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        };\n        fetch(\"/api/login\", login_info).then(res => {\n            // return JSON.parse(res.json());\n            return res.json();\n            \n        }).then(json => {\n                if (json[0] != undefined) {\n                    window.localStorage.setItem(\"userInfo\", JSON.stringify(json))\n                    this.setState({\n                            userNum: json[0].usernum,\n                            name: json[0].name,\n                            isLogin: true });}\n                else {\n                    this.setState(\n                        {\n                            isWrong:false,\n                        }\n                    )\n                    if(this.state.isWrong===false){\n                    // alert(\"아이디 혹은 비밀번호를 확인하세요\")\n                    this.setState(\n                        {\n                            isWrong:0\n                        }\n                    )\n                }\n                }});\n    }\n\n    handleuserNum = e => {this.setState({ userNum: e.target.value})}\n\n    render() {\n        if(this.state.isQR===true&&this.state.LoginTime===0){\n            try {\n                setTimeout(() => {\n                    try {\n                        document.getElementById('btnLogin').click();     \n                    } catch (error) {\n\n                    }}, 1500);\n            } catch (error) {\n                console.log(\"로그인 오류\")   \n            }}\n        return (\n            <>\n            <body scroll=\"no\"></body>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"LoginPage\" style={\n                    {\n                        textAlign:\"center\"\n                    }\n                }>\n                    <button id=\"FullScreenButton\"></button>\n                        {\n                            this.state.isLogin === false ? (\n                                <div className=\"Login-form\">\n                                    <form className=\"LoginForm\" onSubmit={this.handleLogin}>\n            <BarcodeScannerComponent width={500} height={500}\n              onUpdate={(err, result) => {\n                if (result) {\n                document.getElementById(\"FullScreenButton\").click();\n                    this.setState({userNum: result.text, isQR:true})}\n                else{\n                this.setState(\n                    {userNum: \"QR 코드를 인식해주세요\", isQR:false});}\n              }}\n            />\n                          \n             <div><input id=\"LoginInput\" type=\"text\" value={this.state.userNum} onChange={this.handleuserNum.bind(this)} placeholder=\"QR CODE\"></input>\n             <button type=\"hidden\" className=\"btn btn-primary\" id=\"btnLogin\" type=\"submit\">1</button>\n            </div>\n            </form></div>) \n            :           ///로그인이 되었다면 Predict 화면 \n            (<div><Predict name={this.state.name} userNum={this.state.userNum} isLogin={this.state.isLogin}></Predict></div>)}</div></div>\n            </>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcodecl.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Predict.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Table1.js",[],["59","60"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\TableBody.js",["61"],"import React, { Component } from 'react'\n\nexport default class TableBody extends Component {\n    render() {\n        return (\n            <div>\n            <table class=\"table\">\n            <th scope=\"row\">{this.props.id}</th>\n            <td>{this.props.userNum}</td>\n            <td>{this.props.depth}</td>\n            <td>{this.props.distance}</td>\n            <td>{this.props.date}</td>\n            <td><img src=\"https://placeimg.com/64/64/summer\" /></td>\n            {/* <td><img src=\"\"></img></td> */}\n            </table>\n            </div>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\hair-predict.jsx",["62","63","64"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Header.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Hair-predict.jsx",["65","66","67"],"import React, { useState, useEffect } from 'react'\nimport * as tmImage from '@teachablemachine/image'\n\nexport default function WelcomePage({GetTeachValue}) {\n  const [openVal, setOpenVal] = useState(false);\n  const [state, setstate] = useState({\n    iswebcam : false,\n  })\n  // const URL = \"https://teachablemachine.withgoogle.com/models/pg97lEWuB/\"  //원래\n  const URL = \"https://teachablemachine.withgoogle.com/models/ukHIXusf5/\" //4개 분류\n  let model;\n  let webcam;\n  let labelContainer;\n  let maxPredictions;\n  useEffect(() => {\n    init()\n  }, [])\n\n  async function init() {\n    const modelURL = URL + \"model.json\";\n    const metadataURL = URL + \"metadata.json\";\n    model = await tmImage.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n    const flip = true; \n    webcam = new tmImage.Webcam(500, 500, flip); \n    await webcam.setup();\n    await webcam.play();\n    window.requestAnimationFrame(loop);\n    webcam.canvas.id=\"WebCam\"\n    document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n    labelContainer = document.getElementById(\"label-container\");\n    for (let i = 0; i < maxPredictions; i++) { \n      labelContainer.appendChild(document.createElement(\"div\"));\n    }\n  }\n\n  async function loop() {\n    webcam.update();\n    await predict();\n    window.requestAnimationFrame(loop);\n  }\n\n  async function predict() {\n    const prediction = await model.predict(webcam.canvas);\n    setstate({\n      high : prediction[0].probability.toFixed(2),\n      middle : prediction[1].probability.toFixed(2),\n      low : prediction[2].probability.toFixed(2),\n      good : prediction[3].probability.toFixed(2),\n    })\n    function SetTeachValue(){\n      GetTeachValue(prediction[0].probability.toFixed(2),prediction[1].probability.toFixed(2),prediction[2].probability.toFixed(2),prediction[3].probability.toFixed(2))\n    }\n    SetTeachValue()\n    if (prediction[0].probability.toFixed(2) >= 0.7) {\n      setOpenVal(true);\n    } else {\n      setOpenVal(false);\n    }\n    \n  }\n\n\n  return (\n    <div>\n      \n      <div id=\"webcam-container\"></div>\n      <div id=\"label-container\">{/* <h3>탈모일 확률 : {state.result1} <br></br> 정상일 확률 : {state.result2}</h3> */}</div>\n      <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n    </div>\n  )\n}",["68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":5,"column":40,"nodeType":"76","messageId":"77","endLine":5,"endColumn":44},{"ruleId":"74","severity":1,"message":"78","line":12,"column":12,"nodeType":"76","messageId":"77","endLine":12,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":37,"column":29,"nodeType":"81","messageId":"82","endLine":37,"endColumn":31},{"ruleId":"83","severity":1,"message":"84","line":101,"column":78,"nodeType":"85","endLine":101,"endColumn":91},{"ruleId":"70","replacedBy":"86"},{"ruleId":"72","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":13,"column":17,"nodeType":"90","endLine":13,"endColumn":64},{"ruleId":"74","severity":1,"message":"91","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":17},{"ruleId":"74","severity":1,"message":"92","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":21,"column":6,"nodeType":"95","endLine":21,"endColumn":8,"suggestions":"96"},{"ruleId":"74","severity":1,"message":"91","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":17},{"ruleId":"74","severity":1,"message":"92","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":17,"column":6,"nodeType":"95","endLine":17,"endColumn":8,"suggestions":"97"},{"ruleId":"70","replacedBy":"98"},{"ruleId":"72","replacedBy":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["100"],["101"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'openVal' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["102"],["103"],["100"],["101"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},"Update the dependencies array to be: [init]",{"range":"107","text":"108"},{"range":"109","text":"108"},[634,636],"[init]",[545,547]]