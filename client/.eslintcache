[{"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\index.js":"1","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\reportWebVitals.js":"2","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\App.js":"3","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcode.js":"4","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Login.js":"5","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcodecl.js":"6","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\Finalcart.js":"7","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\Cart.js":"8","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Result.js":"9","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\modal\\Test.js":"10","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Result1.js":"11","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Predict.js":"12","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Header.js":"13","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Footer.js":"14","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\modal\\Modal.js":"15","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Table1.js":"16","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\WelcomePage-motion.jsx":"17","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\TableBody.js":"18","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Left.js":"19"},{"size":500,"mtime":1620740360000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1620740360000,"results":"22","hashOfConfig":"21"},{"size":2907,"mtime":1621253954500,"results":"23","hashOfConfig":"21"},{"size":705,"mtime":1620740360000,"results":"24","hashOfConfig":"21"},{"size":4049,"mtime":1621328632922,"results":"25","hashOfConfig":"21"},{"size":926,"mtime":1620740360000,"results":"26","hashOfConfig":"21"},{"size":498,"mtime":1620740360000,"results":"27","hashOfConfig":"21"},{"size":192,"mtime":1620740360000,"results":"28","hashOfConfig":"21"},{"size":715,"mtime":1621327365208,"results":"29","hashOfConfig":"21"},{"size":1019,"mtime":1621251037655,"results":"30","hashOfConfig":"21"},{"size":142,"mtime":1621252267229,"results":"31","hashOfConfig":"21"},{"size":5492,"mtime":1621330483832,"results":"32","hashOfConfig":"21"},{"size":1076,"mtime":1621321935199,"results":"33","hashOfConfig":"21"},{"size":1167,"mtime":1620740360000,"results":"34","hashOfConfig":"21"},{"size":881,"mtime":1620740360000,"results":"35","hashOfConfig":"21"},{"size":2359,"mtime":1620740360000,"results":"36","hashOfConfig":"21"},{"size":2572,"mtime":1620740360000,"results":"37","hashOfConfig":"21"},{"size":565,"mtime":1620740360000,"results":"38","hashOfConfig":"21"},{"size":521,"mtime":1620740360000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1e3vep1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\index.js",[],["85","86"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\App.js",["87","88"],"import React,{Component} from 'react';\r\nimport './App.css';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Login from './components/Login';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { BrowserRouter, Route, Switch, Link  } from 'react-router-dom';\r\n// import Table1 from './components/Table1';\r\nimport Predict from './components/Predict';\r\nimport Qrcode from './components/Qrcode';\r\nimport Qrcodecl from './components/Qrcodecl';\r\nimport Test from './components/modal/Test'\r\nimport Result from './components/Result'\r\nimport Result1 from './components/Result1'\r\nimport Finalcart from './components/test/Finalcart';\r\nimport Cart from './components/test/Cart';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  root : {\r\n    width : '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX:\"auto\"\r\n  },\r\n    table:{\r\n      minWidth:1080\r\n    },\r\n    progress:{\r\n      margin : theme.spacing.unit*2\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props)     \r\n  {\r\n    super(props);\r\n    this.state={\r\n      customers:'',\r\n      completed:0\r\n    }\r\n  }\r\n\r\n  stateRefresh= () => {           //state 초기화 \r\n    this.setState(\r\n      {\r\n        customers:'',\r\n        completed:0\r\n      });\r\n      this.callApi().then(res=> this.setState({customers:res})) \r\n      .catch(err=> console.log(err+\"에러\"));\r\n\r\n  }\r\n\r\n\r\n  \r\n  componentDidMount() {\r\n    this.timer = setInterval(this.progress,20);\r\n    this.callApi().then(res=> this.setState({customers:res})) \r\n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\r\n  }\r\n  \r\n  callApi = async() =>{\r\n    const response = await fetch('/api/predict');  //server.js 에 있는 /api/customers JSON값을 가져온다\r\n    const body = await response.json();\r\n    return body;\r\n  }\r\n\r\n  // callApi1 = async() =>{\r\n  //   const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\r\n  //   const body = await response.json();\r\n  //   return body;\r\n  // }\r\n\r\n\r\n \r\n\r\n  progress = () => {\r\n    const {completed} =this.state;\r\n    this.setState({ completed: completed>=100? 0 : completed+1});\r\n  }\r\n\r\n  \r\n  render()\r\n  \r\n  {\r\n    const {classes} =this.props;\r\n    return(\r\n      <>\r\n     <div>\r\n     </div>\r\n      {/* <Login></Login> */}\r\n     \r\n    <BrowserRouter>\r\n    <Switch>\r\n    <Route exact path=\"/\" component={Login}/>\r\n     <Route path=\"/predict\" component={Predict}/>\r\n     <Route path=\"/qrcodecl\" component={Qrcodecl}/>\r\n     <Route path=\"/qrcode\" component={Qrcode}/>\r\n     <Route path=\"/Test\" component={Test}/>\r\n     <Route path=\"/result\" component={Result}/>\r\n     <Route path=\"/result1\" component={Result1}/>\r\n     <Route path=\"/cart\" component={Cart}/>\r\n     <Route path=\"/finalcart\" component={Finalcart}/>\r\n    </Switch>\r\n  </BrowserRouter>\r\n  <div>\r\n     </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(App);\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcode.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Login.js",["89","90","91"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Qrcodecl.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\Finalcart.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\test\\Cart.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Result.js",["92"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\modal\\Test.js",["93","94"],"import React, { useState } from 'react';\nimport Modal from './Modal'\n\nfunction Test() {\n    // useState를 사용하여 open상태를 변경한다. (open일때 true로 만들어 열리는 방식)\n    const [ modalOpen, setModalOpen ] = useState(false);\n\n    const openModal = () => {\n        setModalOpen(true);\n    }\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            <button onClick={ openModal }>모달팝업</button>\n            //header 부분에 텍스트를 입력한다.\n            <Modal open={ modalOpen } close={ closeModal } header=\"Modal heading\">\n\n                // Modal.js <main>asdsadsa</main>에 내용이 입력된다. \n                리액트 함수형 모달asdsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsads 팝업창입니다.\n                쉽게 만들 수 있어요. \n                같이 만들어봐요!\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nexport default Test","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Result1.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Predict.js",["95","96","97","98","99","100"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Header.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Footer.js",["101","102","103","104","105","106","107"],"import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n        <div className=\"pt-4 my-md-5 pt-md-5 border-top\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md\">\n            <img className=\"mb-2\" src=\"https://namigation.s3.ap-northeast-2.amazonaws.com/web/mark.jpg\" width=\"20px\" alt=\"\" width=\"24\" height=\"24\"/>\n            <small className=\"d-block mb-3 text-muted\">&copy; 2020-2021</small>\n          <div className=\"col-6 col-md\">\n            <h5>Features</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"text-muted\" href=\"#\">Cool stuff</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Random feature</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Team feature</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Stuff for developers</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Another one</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Last time</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n        </div>\n        </div>\n        \n    )\n}\n\nexport default Footer\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\modal\\Modal.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\Table1.js",["108","109"],"import React, { Component } from 'react'\nimport ResultTable from './TableBody'\nimport { get } from 'axios';\nimport '../App.css';\nimport Header from './layout/Header';\nimport Left from './layout/Left';\nimport Footer from './layout/Footer';\n\nexport default class Table1 extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            userNum: this.props.userNum,\n            name: this.props.name,\n        }\n    }\n    \n    stateRefresh= () => {           //state 초기화 \n        this.setState(\n          {\n            result:'',\n            completed:0\n            \n          });\n          this.callApi().then(res=> this.setState({result:res})) \n          .catch(err=> console.log(err));\n         \n      }\n\n      componentDidMount() {\n        const login_info={\n            method:\"POST\",\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n        fetch(\"/api/login\",login_info).then(res => {\n            return res.json();\n        })\n        this.timer = setInterval(this.progress,20);\n        this.callApi().then(res=> this.setState({result:res})) \n        .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n      }\n      \n      callApi = async() =>{\n        const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n        const body = await response.json();\n        console.log(body)\n        return body;\n        \n      }\n      \n    render() {\n        return (\n          <>\n          <Header></Header>\n          {/* <Left></Left> */}\n            <div className=\"Content\">\n            <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">First</th>\n      <th scope=\"col\">Last</th>\n      <th scope=\"col\">Handle</th>\n    </tr>\n  </thead>\n  \n</table>\n             \n           \n{this.state.userNum} {this.state.name}\n        <tablebody>\n        {this.state.result ? this.state.result.map(result=> {return (<ResultTable key = {result.id} id = {result.id} userNum = {result.userNum} depth={result.depth} distance={result.distance} date={result.date} >  </ResultTable>)\n        }): (<div>zxczx</div>)\n        \n        } </tablebody>\n\n            </div>\n            <Footer></Footer>\n            </>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\WelcomePage-motion.jsx",["110","111","112"],"import React, { useState, useEffect } from 'react'\nimport * as tmImage from '@teachablemachine/image'\n\nexport default function WelcomePage({GetTeachValue}) {\n  const [openVal, setOpenVal] = useState(false);\n  const [state, setstate] = useState({\n    result1 : \"High\",\n    result2 : \"Middle\",\n    result3 : \"Low\",\n    result4 : \"Good\",\n    iswebcam : false,\n  })\n\n  // const URL = \"https://teachablemachine.withgoogle.com/models/pg97lEWuB/\"  //원래\n  const URL = \"https://teachablemachine.withgoogle.com/models/durPR47Po/\" //4개 분류\n\n  \n  let model;\n  let webcam;\n  let labelContainer;\n  let maxPredictions;\n\n  useEffect(() => {\n    init()\n    \n  }, [])\n\n  async function init() {\n    const modelURL = URL + \"model.json\";\n    const metadataURL = URL + \"metadata.json\";\n    \n\n    model = await tmImage.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n\n    const flip = true; \n    webcam = new tmImage.Webcam(500, 500, flip); \n    await webcam.setup();\n    await webcam.play();\n    window.requestAnimationFrame(loop);\n    webcam.canvas.id=\"WebCam\"\n    document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n    labelContainer = document.getElementById(\"label-container\");\n    for (let i = 0; i < maxPredictions; i++) { \n      labelContainer.appendChild(document.createElement(\"div\"));\n    }\n  }\n\n  async function loop() {\n    webcam.update();\n    await predict();\n    window.requestAnimationFrame(loop);\n  }\n\n  async function predict() {\n    \n    const prediction = await model.predict(webcam.canvas);\n    setstate({\n      high : prediction[0].probability.toFixed(2),\n      middle : prediction[1].probability.toFixed(2),\n      low : prediction[2].probability.toFixed(2),\n      good : prediction[3].probability.toFixed(2),\n    })\n    function SetTeachValue(){\n      GetTeachValue(prediction[0].probability.toFixed(2),prediction[1].probability.toFixed(2),prediction[2].probability.toFixed(2),prediction[3].probability.toFixed(2))\n    }\n    SetTeachValue()\n    if (prediction[0].probability.toFixed(2) >= 0.7) {\n      setOpenVal(true);\n    } else {\n      setOpenVal(false);\n    }\n    \n  }\n\n\n  return (\n    <div>\n      \n      <div id=\"webcam-container\"></div>\n      <div id=\"label-container\">{/* <h3>탈모일 확률 : {state.result1} <br></br> 정상일 확률 : {state.result2}</h3> */}</div>\n      <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n    </div>\n  )\n}","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\TableBody.js",["113"],"import React, { Component } from 'react'\n\nexport default class TableBody extends Component {\n    render() {\n        return (\n            <div>\n            <table class=\"table\">\n            <th scope=\"row\">{this.props.id}</th>\n            <td>{this.props.userNum}</td>\n            <td>{this.props.depth}</td>\n            <td>{this.props.distance}</td>\n            <td>{this.props.date}</td>\n            <td><img src=\"https://placeimg.com/64/64/summer\" /></td>\n            {/* <td><img src=\"\"></img></td> */}\n            </table>\n            </div>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\namigations\\client\\src\\components\\layout\\Left.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":6,"column":40,"nodeType":"120","messageId":"121","endLine":6,"endColumn":44},{"ruleId":"118","severity":1,"message":"122","line":93,"column":12,"nodeType":"120","messageId":"121","endLine":93,"endColumn":19},{"ruleId":"118","severity":1,"message":"123","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":39,"column":29,"nodeType":"126","messageId":"127","endLine":39,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":103,"column":74,"nodeType":"130","endLine":103,"endColumn":87},{"ruleId":"118","severity":1,"message":"131","line":5,"column":11,"nodeType":"120","messageId":"121","endLine":5,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":17,"column":56,"nodeType":"134","endLine":19,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":19,"column":83,"nodeType":"134","endLine":21,"endColumn":29},{"ruleId":"118","severity":1,"message":"135","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"136","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":3,"column":17,"nodeType":"120","messageId":"121","endLine":3,"endColumn":21},{"ruleId":"118","severity":1,"message":"137","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":13},{"ruleId":"118","severity":1,"message":"138","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":20},{"ruleId":"118","severity":1,"message":"139","line":62,"column":15,"nodeType":"120","messageId":"121","endLine":62,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":9,"column":125,"nodeType":"130","endLine":9,"endColumn":135},{"ruleId":"140","severity":1,"message":"141","line":14,"column":19,"nodeType":"142","endLine":14,"endColumn":54},{"ruleId":"140","severity":1,"message":"141","line":15,"column":19,"nodeType":"142","endLine":15,"endColumn":54},{"ruleId":"140","severity":1,"message":"141","line":16,"column":19,"nodeType":"142","endLine":16,"endColumn":54},{"ruleId":"140","severity":1,"message":"141","line":17,"column":19,"nodeType":"142","endLine":17,"endColumn":54},{"ruleId":"140","severity":1,"message":"141","line":18,"column":19,"nodeType":"142","endLine":18,"endColumn":54},{"ruleId":"140","severity":1,"message":"141","line":19,"column":19,"nodeType":"142","endLine":19,"endColumn":54},{"ruleId":"118","severity":1,"message":"143","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"118","severity":1,"message":"144","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":12},{"ruleId":"118","severity":1,"message":"145","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"118","severity":1,"message":"146","line":6,"column":10,"nodeType":"120","messageId":"121","endLine":6,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":26,"column":6,"nodeType":"149","endLine":26,"endColumn":8,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":13,"column":17,"nodeType":"142","endLine":13,"endColumn":64},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'Footer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'tempStyle' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'Fragment' is defined but never used.","'Route' is defined but never used.","'Table' is defined but never used.","'withRouter' is defined but never used.","'filename' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'get' is defined but never used.","'Left' is defined but never used.","'openVal' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [init]",{"range":"158","text":"159"},[645,647],"[init]"]