[{"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\index.js":"1","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\reportWebVitals.js":"2","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\App.js":"3","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Login.js":"4","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\WelcomePage-motion.jsx":"5","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Predict.js":"6","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\TableBody.js":"7","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Dictaphone.js":"8","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Table1.js":"9","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Header.js":"10","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Footer.js":"11","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Left.js":"12","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Qrcode.js":"13","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Qrcodecl.js":"14","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\modal\\Test.js":"15","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\modal\\Modal.js":"16","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Result.js":"17","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Result1.js":"18"},{"size":500,"mtime":1619786968000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1619786968000,"results":"21","hashOfConfig":"20"},{"size":2594,"mtime":1620094929968,"results":"22","hashOfConfig":"20"},{"size":3631,"mtime":1620270860223,"results":"23","hashOfConfig":"20"},{"size":2570,"mtime":1619786968000,"results":"24","hashOfConfig":"20"},{"size":4867,"mtime":1620270870351,"results":"25","hashOfConfig":"20"},{"size":565,"mtime":1619786968000,"results":"26","hashOfConfig":"20"},{"size":2038,"mtime":1619786968000,"results":"27","hashOfConfig":"20"},{"size":2338,"mtime":1619786968000,"results":"28","hashOfConfig":"20"},{"size":1044,"mtime":1619786968000,"results":"29","hashOfConfig":"20"},{"size":1167,"mtime":1619786968000,"results":"30","hashOfConfig":"20"},{"size":521,"mtime":1619786968000,"results":"31","hashOfConfig":"20"},{"size":705,"mtime":1619786968000,"results":"32","hashOfConfig":"20"},{"size":926,"mtime":1619786968000,"results":"33","hashOfConfig":"20"},{"size":960,"mtime":1620012981382,"results":"34","hashOfConfig":"20"},{"size":908,"mtime":1620012329706,"results":"35","hashOfConfig":"20"},{"size":902,"mtime":1620111926621,"results":"36","hashOfConfig":"20"},{"size":164,"mtime":1620108972139,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1bhqh3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\index.js",[],["84","85"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\App.js",["86","87"],"import React,{Component} from 'react';\nimport './App.css';\nimport {withStyles} from '@material-ui/core/styles';\nimport Login from './components/Login';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter, Route, Switch, Link  } from 'react-router-dom';\n// import Table1 from './components/Table1';\nimport Predict from './components/Predict';\nimport Qrcode from './components/Qrcode';\nimport Qrcodecl from './components/Qrcodecl';\nimport Test from './components/modal/Test'\nimport Result from './components/Result'\nimport Result1 from './components/Result1'\n\n\n\n\nconst styles = theme => ({\n  root : {\n    width : '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX:\"auto\"\n  },\n    table:{\n      minWidth:1080\n    },\n    progress:{\n      margin : theme.spacing.unit*2\n    }\n})\n\n\n\n\n\n\nclass App extends Component{\n\n  constructor(props)     \n  {\n    super(props);\n    this.state={\n      customers:'',\n      completed:0\n    }\n  }\n\n  stateRefresh= () => {           //state 초기화 \n    this.setState(\n      {\n        customers:'',\n        completed:0\n      });\n      this.callApi().then(res=> this.setState({customers:res})) \n      .catch(err=> console.log(err+\"에러\"));\n\n  }\n\n\n  \n  componentDidMount() {\n    this.timer = setInterval(this.progress,20);\n    this.callApi().then(res=> this.setState({customers:res})) \n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n  }\n  \n  callApi = async() =>{\n    const response = await fetch('/api/predict');  //server.js 에 있는 /api/customers JSON값을 가져온다\n    const body = await response.json();\n    return body;\n  }\n\n  // callApi1 = async() =>{\n  //   const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n  //   const body = await response.json();\n  //   return body;\n  // }\n\n\n \n\n  progress = () => {\n    const {completed} =this.state;\n    this.setState({ completed: completed>=100? 0 : completed+1});\n  }\n\n  \n  render()\n  \n  {\n    const {classes} =this.props;\n    return(\n      <>\n     <div>\n     </div>\n      {/* <Login></Login> */}\n     \n      <BrowserRouter>\n    <Switch>\n    <Route exact path=\"/\" component={Login}/>\n     <Route path=\"/predict\" component={Predict}/>\n     <Route path=\"/qrcodecl\" component={Qrcodecl}/>\n     <Route path=\"/qrcode\" component={Qrcode}/>\n     <Route path=\"/Test\" component={Test}/>\n     <Route path=\"/result\" component={Result}/>\n     <Route path=\"/result1\" component={Result1}/>\n    </Switch>\n  </BrowserRouter>\n  <div>\n     </div>\n      </>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(App);\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Login.js",["88","89"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\WelcomePage-motion.jsx",["90","91","92"],"import React, { useState, useEffect } from 'react'\nimport * as tmImage from '@teachablemachine/image'\n\nexport default function WelcomePage({GetTeachValue}) {\n  const [openVal, setOpenVal] = useState(false);\n  const [state, setstate] = useState({\n    result1 : \"High\",\n    result2 : \"Middle\",\n    result3 : \"Low\",\n    result4 : \"Good\",\n    iswebcam : false,\n  })\n\n  // const URL = \"https://teachablemachine.withgoogle.com/models/pg97lEWuB/\"  //원래\n  const URL = \"https://teachablemachine.withgoogle.com/models/durPR47Po/\" //4개 분류\n\n  \n  let model;\n  let webcam;\n  let labelContainer;\n  let maxPredictions;\n\n  useEffect(() => {\n    init()\n    \n  }, [])\n\n  async function init() {\n    const modelURL = URL + \"model.json\";\n    const metadataURL = URL + \"metadata.json\";\n    \n\n    model = await tmImage.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n\n    const flip = true; \n    webcam = new tmImage.Webcam(80, 80, flip); \n    await webcam.setup();\n    await webcam.play();\n    window.requestAnimationFrame(loop);\n    webcam.canvas.id=\"WebCam\"\n    document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n    labelContainer = document.getElementById(\"label-container\");\n    for (let i = 0; i < maxPredictions; i++) { \n      labelContainer.appendChild(document.createElement(\"div\"));\n    }\n  }\n\n  async function loop() {\n    webcam.update();\n    await predict();\n    window.requestAnimationFrame(loop);\n  }\n\n  async function predict() {\n    \n    const prediction = await model.predict(webcam.canvas);\n    setstate({\n      high : prediction[0].probability.toFixed(2),\n      middle : prediction[1].probability.toFixed(2),\n      low : prediction[2].probability.toFixed(2),\n      good : prediction[3].probability.toFixed(2),\n    })\n    function SetTeachValue(){\n      GetTeachValue(prediction[0].probability.toFixed(2),prediction[1].probability.toFixed(2),prediction[2].probability.toFixed(2),prediction[3].probability.toFixed(2))\n    }\n    SetTeachValue()\n    if (prediction[0].probability.toFixed(2) >= 0.7) {\n      setOpenVal(true);\n    } else {\n      setOpenVal(false);\n    }\n    \n  }\n\n\n  return (\n    <div>\n      \n      <div id=\"webcam-container\"></div>\n      <div id=\"label-container\">{/* <h3>탈모일 확률 : {state.result1} <br></br> 정상일 확률 : {state.result2}</h3> */}</div>\n      <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n    </div>\n  )\n}","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Predict.js",["93","94"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\TableBody.js",["95"],"import React, { Component } from 'react'\n\nexport default class TableBody extends Component {\n    render() {\n        return (\n            <div>\n            <table class=\"table\">\n            <th scope=\"row\">{this.props.id}</th>\n            <td>{this.props.userNum}</td>\n            <td>{this.props.depth}</td>\n            <td>{this.props.distance}</td>\n            <td>{this.props.date}</td>\n            <td><img src=\"https://placeimg.com/64/64/summer\" /></td>\n            {/* <td><img src=\"\"></img></td> */}\n            </table>\n            </div>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Dictaphone.js",["96","97","98","99"],"import { useTheme } from '@material-ui/core'\nimport React, {useEffect,useState} from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\n\nconst Dictaphone = ({GetVoiceValue}) => {\n  const { transcript, resetTranscript } = useSpeechRecognition()\n  const [userNum, setuserNum] = useState(\"1234\")\n  useEffect(() => {\n    SpeechRecognition.startListening()  \n      // setTimeout(() => {\n    console.log(\"-------------useEffect------------\")\n  console.log(userNum.userNum)\n  // handleValueChange()\n  // SetVoiceValue()\n    // }, 7000)\n\n     setTimeout(() => {\n        // handleValueChange()\n        // handleValueChange()\n          }, 7000)\n  }, [])\n\n\n\n \n  \n\n function handleValueChange(e){\n   setTimeout(7000)\n   SetVoiceValue()\n   setuserNum(\n    {\n      // transcript : e.target.value,\n      userNum : transcript,\n\n    }\n    \n  )\n  console.log(\"-------------handlevalue------------\")\n    console.log(userNum.userNum)\n  console.log(transcript)\n  SetVoiceValue()\n\n}\n\nfunction SetVoiceValue(){\n  // setTimeout(() => {\n  //   setuserNum(\n  //     {\n  //       // transcript : e.target.value,\n  //       userNum : transcript,\n  \n  //     })  \n  //   }, 2000)\n  console.log(\"보이스 값 추출\")\n  GetVoiceValue(userNum.userNum)\n  console.log(\"-------------setvoice------------\")\n    console.log(userNum.userNum)  \n}\n\n\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null\n  }\n\n  return (\n    <div>\n      {/* <button onClick={SpeechRecognition.startListening}>Start</button>\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\n      <button onClick={resetTranscript}>Reset</button> */}\n      {/* <input type =\"text\" name={usernum} value={transcript} onChange={handleValueChange.bind(this)}></input> */}\n      <input id=\"VoiceInput\" type =\"text\" value={transcript||\"\"} onChange={handleValueChange.bind(this)} onChange={handleValueChange} ></input>\n      <p>{transcript}</p>\n      {/* <p>사{userNum.userNum}이</p> */}\n    </div>\n  )\n}\nexport default Dictaphone",["100","101"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Table1.js",["102","103"],"import React, { Component } from 'react'\nimport ResultTable from './TableBody'\nimport { get } from 'axios';\nimport '../App.css';\nimport Header from './Header';\nimport Left from './Left';\nimport Footer from './Footer';\n\nexport default class Table1 extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            userNum: this.props.userNum,\n            name: this.props.name,\n        }\n    }\n    \n    stateRefresh= () => {           //state 초기화 \n        this.setState(\n          {\n            result:'',\n            completed:0\n            \n          });\n          this.callApi().then(res=> this.setState({result:res})) \n          .catch(err=> console.log(err));\n         \n      }\n\n      componentDidMount() {\n        const login_info={\n            method:\"POST\",\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n        fetch(\"/api/login\",login_info).then(res => {\n            return res.json();\n        })\n        this.timer = setInterval(this.progress,20);\n        this.callApi().then(res=> this.setState({result:res})) \n        .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n      }\n      \n      callApi = async() =>{\n        const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n        const body = await response.json();\n        console.log(body)\n        return body;\n        \n      }\n      \n    render() {\n        return (\n          <>\n          <Header></Header>\n          {/* <Left></Left> */}\n            <div className=\"Content\">\n            <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">First</th>\n      <th scope=\"col\">Last</th>\n      <th scope=\"col\">Handle</th>\n    </tr>\n  </thead>\n  \n</table>\n             \n           \n{this.state.userNum} {this.state.name}\n        <tablebody>\n        {this.state.result ? this.state.result.map(result=> {return (<ResultTable key = {result.id} id = {result.id} userNum = {result.userNum} depth={result.depth} distance={result.distance} date={result.date} >  </ResultTable>)\n        }): (<div>zxczx</div>)\n        \n        } </tablebody>\n\n            </div>\n            <Footer></Footer>\n            </>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Header.js",["104","105","106","107"],"import React from 'react'\n\nconst Header = () => {\n    return (\n        <div className=\"Header\">\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a className=\"navbar-brand\" href=\"#\"><img src=\"https://namigation.s3.ap-northeast-2.amazonaws.com/web/mark.jpg\" width=\"35px\"></img></a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div className=\"navbar-nav\">\n      <a className=\"nav-item nav-link active\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n      <a className=\"nav-item nav-link\" href=\"/table\">Table</a>\n      <a className=\"nav-item nav-link\" href=\"#\">Pricing</a>\n      <a className=\"nav-item nav-link disabled\" href=\"#\">Disabled</a>\n    </div>\n  </div>\n</nav>\n </div>\n        \n    )\n}\n\nexport default Header\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Footer.js",["108","109","110","111","112","113","114"],"import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n        <div className=\"pt-4 my-md-5 pt-md-5 border-top\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md\">\n            <img className=\"mb-2\" src=\"https://namigation.s3.ap-northeast-2.amazonaws.com/web/mark.jpg\" width=\"20px\" alt=\"\" width=\"24\" height=\"24\"/>\n            <small className=\"d-block mb-3 text-muted\">&copy; 2020-2021</small>\n          <div className=\"col-6 col-md\">\n            <h5>Features</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"text-muted\" href=\"#\">Cool stuff</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Random feature</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Team feature</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Stuff for developers</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Another one</a></li>\n              <li><a className=\"text-muted\" href=\"#\">Last time</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n        </div>\n        </div>\n        \n    )\n}\n\nexport default Footer\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Left.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Qrcode.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Qrcodecl.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\modal\\Test.js",["115","116"],"import React, { useState } from 'react';\r\nimport Modal from './Modal'\r\n\r\nfunction Test() {\r\n    // useState를 사용하여 open상태를 변경한다. (open일때 true로 만들어 열리는 방식)\r\n    const [ modalOpen, setModalOpen ] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setModalOpen(true);\r\n    }\r\n    const closeModal = () => {\r\n        setModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button onClick={ openModal }>모달팝업</button>\r\n            //header 부분에 텍스트를 입력한다.\r\n            <Modal open={ modalOpen } close={ closeModal } header=\"Modal heading\">\r\n\r\n                // Modal.js <main>asdsadsa</main>에 내용이 입력된다. \r\n                리액트 함수형 모달 팝업창입니다.\r\n                쉽게 만들 수 있어요. \r\n                같이 만들어봐요!\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Test","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\modal\\Modal.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Result.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Result1.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":6,"column":40,"nodeType":"123","messageId":"124","endLine":6,"endColumn":44},{"ruleId":"121","severity":1,"message":"125","line":91,"column":12,"nodeType":"123","messageId":"124","endLine":91,"endColumn":19},{"ruleId":"126","severity":1,"message":"127","line":37,"column":29,"nodeType":"128","messageId":"129","endLine":37,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":85,"column":74,"nodeType":"132","endLine":85,"endColumn":87},{"ruleId":"121","severity":1,"message":"133","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":17},{"ruleId":"121","severity":1,"message":"134","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":15},{"ruleId":"135","severity":1,"message":"136","line":26,"column":6,"nodeType":"137","endLine":26,"endColumn":8,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"139","line":1,"column":28,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"140","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":13,"column":17,"nodeType":"143","endLine":13,"endColumn":64},{"ruleId":"121","severity":1,"message":"144","line":1,"column":10,"nodeType":"123","messageId":"124","endLine":1,"endColumn":18},{"ruleId":"121","severity":1,"message":"145","line":7,"column":23,"nodeType":"123","messageId":"124","endLine":7,"endColumn":38},{"ruleId":"135","severity":1,"message":"146","line":22,"column":6,"nodeType":"137","endLine":22,"endColumn":8,"suggestions":"147"},{"ruleId":"130","severity":1,"message":"131","line":74,"column":106,"nodeType":"132","endLine":74,"endColumn":134},{"ruleId":"117","replacedBy":"148"},{"ruleId":"119","replacedBy":"149"},{"ruleId":"121","severity":1,"message":"150","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":13},{"ruleId":"121","severity":1,"message":"151","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":12},{"ruleId":"152","severity":1,"message":"153","line":7,"column":3,"nodeType":"143","endLine":7,"endColumn":40},{"ruleId":"141","severity":1,"message":"142","line":7,"column":40,"nodeType":"143","endLine":7,"endColumn":128},{"ruleId":"152","severity":1,"message":"153","line":15,"column":7,"nodeType":"143","endLine":15,"endColumn":49},{"ruleId":"152","severity":1,"message":"153","line":16,"column":7,"nodeType":"143","endLine":16,"endColumn":58},{"ruleId":"130","severity":1,"message":"131","line":9,"column":125,"nodeType":"132","endLine":9,"endColumn":135},{"ruleId":"152","severity":1,"message":"153","line":14,"column":19,"nodeType":"143","endLine":14,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":15,"column":19,"nodeType":"143","endLine":15,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":16,"column":19,"nodeType":"143","endLine":16,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":17,"column":19,"nodeType":"143","endLine":17,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":18,"column":19,"nodeType":"143","endLine":18,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":19,"column":19,"nodeType":"143","endLine":19,"endColumn":54},{"ruleId":"154","severity":1,"message":"155","line":17,"column":56,"nodeType":"156","endLine":19,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":19,"column":83,"nodeType":"156","endLine":21,"endColumn":29},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'openVal' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'Fragment' is defined but never used.","'Table' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useTheme' is defined but never used.","'resetTranscript' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userNum.userNum'. Either include it or remove the dependency array.",["160"],["157"],["158"],"'get' is defined but never used.","'Left' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [init]",{"range":"165","text":"166"},"Update the dependencies array to be: [userNum.userNum]",{"range":"167","text":"168"},[645,647],"[init]",[681,683],"[userNum.userNum]"]